<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>React-Router-dom V6 更新简单掌握</title>
      <link href="2022/02/16/react-router-dom-v6-geng-xin-jian-dan-zhang-wo/"/>
      <url>2022/02/16/react-router-dom-v6-geng-xin-jian-dan-zhang-wo/</url>
      
        <content type="html"><![CDATA[<p>官方文档：<a href="https://reactrouter.com/docs/en/v6">react-router-dom</a><br><del>英文建议翻译</del></p><h2 id="v6-与-v5-的区别"><a href="#v6-与-v5-的区别" class="headerlink" title="v6 与 v5 的区别"></a>v6 与 v5 的区别</h2><p>安装：<br><code>yarn add react-router-dom</code></p><p><code>npm install react-router-dom</code></p><p>react, react-router-dom 以及相关插件版本:</p><pre class=" language-json"><code class="language-json"><span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"@testing-library/jest-dom"</span><span class="token operator">:</span> <span class="token string">"^5.16.2"</span><span class="token punctuation">,</span>    <span class="token property">"@testing-library/react"</span><span class="token operator">:</span> <span class="token string">"^12.1.3"</span><span class="token punctuation">,</span>    <span class="token property">"@testing-library/user-event"</span><span class="token operator">:</span> <span class="token string">"^13.5.0"</span><span class="token punctuation">,</span>    <span class="token property">"react"</span><span class="token operator">:</span> <span class="token string">"^17.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"react-dom"</span><span class="token operator">:</span> <span class="token string">"^17.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"react-router-dom"</span><span class="token operator">:</span> <span class="token string">"^6.2.1"</span><span class="token punctuation">,</span>    <span class="token property">"react-scripts"</span><span class="token operator">:</span> <span class="token string">"5.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"web-vitals"</span><span class="token operator">:</span> <span class="token string">"^2.1.4"</span><span class="token punctuation">}</span></code></pre><h2 id="使用-React-Router-v6-在根组件下创建路由规则"><a href="#使用-React-Router-v6-在根组件下创建路由规则" class="headerlink" title="使用 React Router v6 在根组件下创建路由规则"></a>使用 React Router v6 在根组件下创建路由规则</h2><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserRouter <span class="token keyword">as</span> Router <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token punctuation">;</span><span class="token keyword">import</span> Demo <span class="token keyword">from</span> <span class="token string">'./pages/demo'</span><span class="token keyword">import</span> <span class="token string">'./App.css'</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>Router<span class="token operator">></span>      <span class="token operator">&lt;</span>Demo <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span></code></pre><p>HashRouter 使用的是 URL 的 hash 部分（即 window.location.hash），来保持页面的 UI 与 URL 的同步。<br>哈希历史记录不支持 location.key 或 location.state<br>BrowserRouter 使用 HTML5 的 history API（pushState, replaceState 和 popState），让页面的 UI 与 URL 同步。</p><h2 id="HashRouter-和-BrowserRouter-的区别"><a href="#HashRouter-和-BrowserRouter-的区别" class="headerlink" title="HashRouter 和 BrowserRouter 的区别"></a>HashRouter 和 BrowserRouter 的区别</h2><p>URL 的表现形式不一样 BrowseRouter 使用 HTML5 的 history API，保证 UI 界面和 URL 同步。HashRouter 使用 URL 的哈希部分来保持 UI 和 URL 的同步。<br>哈希历史记录不支持 location.key 和 location.state。<br>HashRouter 不支持 location.state 和 location.key。<br>通过 state 的方式传值给下一个页面的时候，当到达新的页面，刷新或者后退之后再前进，BrowseRouter 传递的值依然可以得到。</p><p>上面是使用BrowserRouter模式，特点就是地址没有 # 号，也就说明地址需要经过特殊处理，不然可能刷新页面会404。  </p><p>demo:  </p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> Route<span class="token punctuation">,</span> Routes<span class="token punctuation">,</span> NavLink <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-router-dom"</span><span class="token punctuation">;</span><span class="token keyword">import</span> One <span class="token keyword">from</span> <span class="token string">"./one"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Three <span class="token keyword">from</span> <span class="token string">"./three"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Two <span class="token keyword">from</span> <span class="token string">"./two"</span><span class="token punctuation">;</span><span class="token keyword">import</span> NoFind <span class="token keyword">from</span> <span class="token string">"./noFind"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>h1 style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> textAlign<span class="token punctuation">:</span> <span class="token string">"center"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>我是标题<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>      <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>          <span class="token operator">&lt;</span>NavLink to<span class="token operator">=</span><span class="token string">"/one"</span><span class="token operator">></span>Go One<span class="token operator">&lt;</span><span class="token operator">/</span>NavLink<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>          <span class="token operator">&lt;</span>NavLink to<span class="token operator">=</span><span class="token string">"/two"</span><span class="token operator">></span>Go Two<span class="token operator">&lt;</span><span class="token operator">/</span>NavLink<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>          <span class="token operator">&lt;</span>NavLink to<span class="token operator">=</span><span class="token string">"/three"</span><span class="token operator">></span>Go Three<span class="token operator">&lt;</span><span class="token operator">/</span>NavLink<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>      <span class="token operator">&lt;</span>hr <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>Routes<span class="token operator">></span>        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/one"</span> element<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">One</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/two/*"</span> element<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">Two</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/three"</span> element<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">Three</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"*"</span> element<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">NoFind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Routes<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>因为之前在App中已经引入过路由规则，所以在demo组件中可以直接使用NavLink等Api，正常使用需要在BrowserRouter标签下。NavLink需要配置to属性，使用引号包裹路径。</p><p>在V6中去掉了原来的switch，改为了现在的Routes,而Route中也去掉了components，改为了功能更加强大的element，他可以包裹标签、组件等功能，不要忘了重要的404，必须配置路径为通配符，而且也是必须在最后一位上。</p><p>需要嵌套路由的Route上地址必须包括 ‘/*’ 以匹配子路由。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// two.js</span><span class="token keyword">import</span> <span class="token punctuation">{</span> Routes<span class="token punctuation">,</span> Route<span class="token punctuation">,</span> NavLink <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token keyword">import</span> Five <span class="token keyword">from</span> <span class="token string">'./five'</span><span class="token punctuation">;</span><span class="token keyword">import</span> Four <span class="token keyword">from</span> <span class="token string">'./four'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Two</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>h3<span class="token operator">></span>我是组件二<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>      <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>          <span class="token operator">&lt;</span>NavLink to<span class="token operator">=</span><span class="token string">"/two/four"</span><span class="token operator">></span>Go Two is four<span class="token operator">&lt;</span><span class="token operator">/</span>NavLink<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>          <span class="token operator">&lt;</span>NavLink to<span class="token operator">=</span><span class="token string">"/two/five"</span><span class="token operator">></span>Go Two is five<span class="token operator">&lt;</span><span class="token operator">/</span>NavLink<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>      <span class="token operator">&lt;</span>hr <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>Routes<span class="token operator">></span>        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/four"</span> element<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">Four</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/five"</span> element<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">Five</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Routes<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// four页面</span><span class="token keyword">import</span> <span class="token punctuation">{</span> Outlet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Four</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>          我是组件二的儿子Four      <span class="token operator">&lt;</span>Outlet <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// five 页面</span><span class="token keyword">import</span> <span class="token punctuation">{</span> Outlet <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-router-dom"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Five</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      我是组件二的儿子Five      <span class="token operator">&lt;</span>Outlet <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>值得一提的是对于模块来说，直接导入拼装和之前一样，都是如果是父页面进入子页面时必须要在子页面中添加Outlet这个占位件。</p><h4 id="向路由组件传递params参数-："><a href="#向路由组件传递params参数-：" class="headerlink" title="向路由组件传递params参数 ："></a>向路由组件传递params参数 ：</h4><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token punctuation">{</span>  Route<span class="token punctuation">,</span>  Routes<span class="token punctuation">,</span>  NavLink<span class="token punctuation">,</span>  Link<span class="token punctuation">,</span>  BrowserRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span>  useParams<span class="token punctuation">,</span>  useLocation<span class="token punctuation">,</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-router-dom"</span><span class="token punctuation">;</span><span class="token keyword">const</span> One <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> handleClick <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'时间戳'</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      我是组件one      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>o n e<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> Two <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span> state <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> handleClick <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"内容"</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      我是组件Two<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>t w o<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> id <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token punctuation">{</span>    timeId<span class="token punctuation">:</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    txt<span class="token punctuation">:</span> <span class="token string">'我是标题'</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Router</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>我是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Link</span> <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`/one/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token number">11111</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Link</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavLink</span> <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token string">`/two`</span></span><span class="token punctuation">}</span></span> <span class="token attr-name">state</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>content<span class="token punctuation">:</span> content<span class="token punctuation">,</span> otherNum<span class="token punctuation">:</span> <span class="token punctuation">{</span>id<span class="token punctuation">:</span> <span class="token string">'9999'</span><span class="token punctuation">,</span> cut<span class="token punctuation">:</span> <span class="token string">'拿来了！'</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token attr-name">}</span><span class="token punctuation">></span></span>            <span class="token number">22222</span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavLink</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Routes</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/one/:id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/one/:id<span class="token punctuation">"</span></span> <span class="token attr-name">element={&lt;One</span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/two<span class="token punctuation">"</span></span> <span class="token attr-name">element={&lt;Two</span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Routes</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Router</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span></code></pre><p>useParams获取到的值必须是你在Route中指定的:</p><pre class=" language-jsx"><code class="language-jsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/one/:id<span class="token punctuation">"</span></span> <span class="token attr-name">element={&lt;One</span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span> <span class="token keyword">const</span> <span class="token punctuation">{</span>id<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 可以获取</span> <span class="token keyword">const</span> <span class="token punctuation">{</span>userId<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// undefined</span></code></pre><p>假如你要useLocation获取传参，必须将他们放在state中。</p><p>注： element中虽然可以使用函数，但是似乎会导致一些hook无法使用, 下图是我同事发给我的，我找了半天也没发现什么问题，最后将函数使用的方式改为标签就可正常获取。</p><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> Route<span class="token punctuation">,</span> Routes<span class="token punctuation">,</span> NavLink<span class="token punctuation">,</span> useParams <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-router-dom"</span><span class="token punctuation">;</span><span class="token keyword">import</span> One <span class="token keyword">from</span> <span class="token string">"./one"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Three <span class="token keyword">from</span> <span class="token string">"./three"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Two <span class="token keyword">from</span> <span class="token string">"./two"</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> textAlign<span class="token punctuation">:</span> <span class="token string">"center"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>我是标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>NavLink</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/one/999<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Go One<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>NavLink</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Routes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Route</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/one/:id<span class="token punctuation">"</span></span> <span class="token attr-name">element</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token function">One</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Routes</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><pre class=" language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> useParams <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-router-dom"</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">One</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> <span class="token punctuation">{</span> id <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>我是组件一<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git的常用命令</title>
      <link href="2020/12/11/git-de-chang-yong-ming-ling/"/>
      <url>2020/12/11/git-de-chang-yong-ming-ling/</url>
      
        <content type="html"><![CDATA[<p>git init : 初始化仓库  </p><p>git status : 查看文件状态（如果修改文件，输入status可以在内容框中看见红色未入暂存区的文件，近一步如果进行git add . 之后，再次输入可以可以内容框里变成色）  </p><p>git add . : 英文状态下的点，将修改过的工作区文件上传到暂存区  </p><p>git commit -m “自定义” ： 暂存区的内容上传到仓库区  </p><p>git log : 查看提交日志  </p><p>git reset –hard 要回退的版本号 ： 可以配合git log 查看所有版本号，复制找到回退的版本号，hard前要加2个-  </p><p>git reflog : 查看操作  </p><p>.gitignore : 在该文件中书写的文件名会被git忽略  </p><p>git branth ： 查看所有分支名称，并且当前操作的分支上会出现*号  </p><p>git merge 要合并的分支名 ： 在当前主干上合并输入的分支，如果合并冲突了，需要自己手动解决冲突，操作结束后需要再次git commit提交  </p><p>git branth 分支名 ：在当前主干上新建一条分支，分支上的所以操作都不会影响到该干（当然，跳到分支上删除主干除外）  </p><p>git branth -d 要删除的分支名 ：删除该分支。不能在该分支上删除该分支（不能铁炖自己），不能在另外一条被当做分支主干上删除另外一条分支主干上的分支（不能影其他操作）  </p><p>git checkout 要跳转的分支名 ： 切换到该分支  </p><p>git checkout -b 分支名 ： 创建分支并跳转到该分支  </p><p>git clone 仓库地址 ： 从地址上克隆项目到本地，一般用与还没有参加该项目的第一下载项目文件  </p><p>git push 地址 分支名 ： 将本地项目和该分支上的修改等操作上传到git仓库。  </p><p>git pull ： 将更新的代码下载到本地  </p><p>git remote add 自定义别名 地址 ： 自定义一个别名用于方便上传仓库，配合push以这样使用 git push 别名 分支名  </p><p>git remote -v ：查看自定义别名  </p><p>git remote remove 要删除的别名 ： 删除该自定义别名  </p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/11/22/hello-world/"/>
      <url>2020/11/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CDN加速是什么？</title>
      <link href="2019/09/27/cdn-jia-su-shi-shi-me/"/>
      <url>2019/09/27/cdn-jia-su-shi-shi-me/</url>
      
        <content type="html"><![CDATA[<h2 id="CDN是什么？"><a href="#CDN是什么？" class="headerlink" title="CDN是什么？"></a>CDN是什么？</h2><p>CDN全称Content Delivery Network，即内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。  </p><p>通过在网络各处放置节点服务器所构成的在现有的互联网基础之上的一层智能虚拟网络，CDN系统能够实时地根据网络流量和各节点的连接、负载状况以及到用户的距离和响应时间等综合信息将用户的请求重新导向离用户最近的服务节点上。其目的是使用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度。  </p><p>CND加速主要是加速静态资源，如网站上面上传的图片、媒体，以及引入的一些Js、css等文件。  </p><p>CND加速需要依靠各个网络节点，例如我在山东登录某平台，我的朋友在北京登录同一平台，这个平台CDN服务器分布在全国范围，会从最近的节点返回资源，这是核心。我在山东会以山东最靠近我的节点回应我，我朋友在北京，会从北京最靠近我朋友的节点回应他。  </p><h2 id="为什么网站一定要使用CDN？CDN的主要特点有五个："><a href="#为什么网站一定要使用CDN？CDN的主要特点有五个：" class="headerlink" title="为什么网站一定要使用CDN？CDN的主要特点有五个："></a>为什么网站一定要使用CDN？CDN的主要特点有五个：</h2><h3 id="1-节省骨干网带宽，减少带宽需求量："><a href="#1-节省骨干网带宽，减少带宽需求量：" class="headerlink" title="(1)节省骨干网带宽，减少带宽需求量："></a>(1)节省骨干网带宽，减少带宽需求量：</h3><p>如果网站没有使用CDN，如果在同一时间涌入大量的流量，那么网站就会很可能会宕机。使用CDN之后，可以减少网站宕机的情况，同时你的网站可以接收更多的流量。  </p><h3 id="2-提供服务器端加速，解决由于用户访问量大造成的服务器过载问题："><a href="#2-提供服务器端加速，解决由于用户访问量大造成的服务器过载问题：" class="headerlink" title="(2)提供服务器端加速，解决由于用户访问量大造成的服务器过载问题："></a>(2)提供服务器端加速，解决由于用户访问量大造成的服务器过载问题：</h3><p>一个网站，他的内容基本都是保存在服务器本地上的，而服务器上的带宽和性能有限，当我们的网站有着大量的用户访问时，服务器的带宽和性能一旦负荷不起如此多的用户访问时，服务器就会宕机，网站就无法访问，这也是DDOS攻击的雏形。为了我们的网站可以接受更多用户的访问，也为了可以抵御更高流量的DDOS攻击，所以我们需要配置CDN加速。  </p><h3 id="3-服务商能使用Web-Cache技术在本地缓存用户访问过的Web页面和对象，实现相同对象的访问无须占用主干的出口带宽，并提高用户访问因特网页面的相应时间的需求；"><a href="#3-服务商能使用Web-Cache技术在本地缓存用户访问过的Web页面和对象，实现相同对象的访问无须占用主干的出口带宽，并提高用户访问因特网页面的相应时间的需求；" class="headerlink" title="(3)服务商能使用Web Cache技术在本地缓存用户访问过的Web页面和对象，实现相同对象的访问无须占用主干的出口带宽，并提高用户访问因特网页面的相应时间的需求；"></a>(3)服务商能使用Web Cache技术在本地缓存用户访问过的Web页面和对象，实现相同对象的访问无须占用主干的出口带宽，并提高用户访问因特网页面的相应时间的需求；</h3><h3 id="4-能克服网站分布不均的问题，并且能降低网站自身建设和维护成本："><a href="#4-能克服网站分布不均的问题，并且能降低网站自身建设和维护成本：" class="headerlink" title="(4)能克服网站分布不均的问题，并且能降低网站自身建设和维护成本："></a>(4)能克服网站分布不均的问题，并且能降低网站自身建设和维护成本：</h3><p>很多网站使用VPS来托管网站，而很多VPS是有带宽限制的，使用CDN能减少成本。使用CDN加速之后你的文件是被存储到不同的服务器上，所以能减少你因为带宽而产生的费用。  </p><h3 id="5-降低“通信风暴”的影响，提高网络访问的稳定性。"><a href="#5-降低“通信风暴”的影响，提高网络访问的稳定性。" class="headerlink" title="(5)降低“通信风暴”的影响，提高网络访问的稳定性。"></a>(5)降低“通信风暴”的影响，提高网络访问的稳定性。</h3><hr>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四次挥手过程理解</title>
      <link href="2019/09/23/si-ci-hui-shou-guo-cheng-li-jie/"/>
      <url>2019/09/23/si-ci-hui-shou-guo-cheng-li-jie/</url>
      
        <content type="html"><![CDATA[<p>1）客户端进程发出连接释放报文，并且停止发送数据。释放数据报文首部，FIN=1，其序列号为seq=u（等于前面已经传送过来的数据的最后一个字节的序号加1），此时，客户端进入FIN-WAIT-1（终止等待1）状态。 TCP规定，FIN报文段即使不携带数据，也要消耗一个序号。  </p><p>2）服务器收到连接释放报文，发出确认报文，ACK=1，ack=u+1，并且带上自己的序列号seq=v，此时，服务端就进入了CLOSE-WAIT（关闭等待）状态。TCP服务器通知高层的应用进程，客户端向服务器的方向就释放了，这时候处于半关闭状态，即客户端已经没有数据要发送了，但是服务器若发送数据，客户端依然要接受。这个状态还要持续一段时间，也就是整个CLOSE-WAIT状态持续的时间。  </p><p>3）客户端收到服务器的确认请求后，此时，客户端就进入FIN-WAIT-2（终止等待2）状态，等待服务器发送连接释放报文（在这之前还需要接受服务器发送的最后的数据）。  </p><p>4）服务器将最后的数据发送完毕后，就向客户端发送连接释放报文，FIN=1，ack=u+1，由于在半关闭状态，服务器很可能又发送了一些数据，假定此时的序列号为seq=w，此时，服务器就进入了LAST-ACK（最后确认）状态，等待客户端的确认。  </p><p>5）客户端收到服务器的连接释放报文后，必须发出确认，ACK=1，ack=w+1，而自己的序列号是seq=u+1，此时，客户端就进入了TIME-WAIT（时间等待）状态。注意此时TCP连接还没有释放，必须经过2∗∗MSL（最长报文段寿命）的时间后，当客户端撤销相应的TCB后，才进入CLOSED状态。  </p><h2 id="6）服务器只要收到了客户端发出的确认，立即进入CLOSED状态。同样，撤销TCB后，就结束了这次的TCP连接。可以看到，服务器结束TCP连接的时间要比客户端早一些。"><a href="#6）服务器只要收到了客户端发出的确认，立即进入CLOSED状态。同样，撤销TCB后，就结束了这次的TCP连接。可以看到，服务器结束TCP连接的时间要比客户端早一些。" class="headerlink" title="6）服务器只要收到了客户端发出的确认，立即进入CLOSED状态。同样，撤销TCB后，就结束了这次的TCP连接。可以看到，服务器结束TCP连接的时间要比客户端早一些。"></a>6）服务器只要收到了客户端发出的确认，立即进入CLOSED状态。同样，撤销TCB后，就结束了这次的TCP连接。可以看到，服务器结束TCP连接的时间要比客户端早一些。</h2>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“三次握手过程理解”</title>
      <link href="2019/09/23/san-ci-wo-shou-guo-cheng-li-jie/"/>
      <url>2019/09/23/san-ci-wo-shou-guo-cheng-li-jie/</url>
      
        <content type="html"><![CDATA[<p>第一次握手：建立连接时，客户端发送syn包（syn=x）到服务器，并进入SYN_SENT状态，等待服务器确认；SYN：同步序列编号（Synchronize Sequence Numbers）。  </p><p>第二次握手：服务器收到syn包，必须确认客户的SYN（ack=x+1），同时自己也发送一个SYN包（syn=y），即SYN+ACK包，此时服务器进入SYN_RECV状态；  </p><p>第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=y+1），此包发送完毕，客户端和服务器进入ESTABLISHED（TCP连接成功）状态，完成三次握手。  </p><p>其本质思想就是“让我知道你回应”了。 服务器监听请求，客户端发起连接请求（第一次连接），请求在路上可能存在丢失的风险， 所以当请求到了服务器后如果服务器同意建立连接会给客户端一个回信（第二次连接），告诉它：我已经收到请求，可以连接。  </p><p>但是回信也存在一个问题，那就是回信能不能到客户端？它需要客户端给他一个回信说我已经收到批准通知了， 如果客户端一直不回复的话意味着客户端没有收到批准通知。    </p><p>因此客户端一收到批准通知就立马回复（第三次握手）：OK老铁我收到你的批准通知了。至此，三次握手结束。 一个很类似的例子就是投简历：先投简历，然后对方公司会通知你通过简历筛选，你收到这个通知后一般会回复一下我知道了。 这种“让我知道你已经知道了”的想法是一种约定俗成的可靠信息交互的基本方式， 基于此想法构建的信息交互框架叫做协议。</p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何让不定宽高的div水平垂直居中</title>
      <link href="2019/09/22/ru-he-rang-div-shui-ping-chui-zhi-ju-zhong/"/>
      <url>2019/09/22/ru-he-rang-div-shui-ping-chui-zhi-ju-zhong/</url>
      
        <content type="html"><![CDATA[<p>1、使用定位，只需要给父元素添加position: relative，子元素添加position:absolute，（需要给子盒子添加top:50%;left:50%）之后使用transform: translate(-50%, -50%)即可。  </p><pre class=" language-bash"><code class="language-bash">        div<span class="token punctuation">{</span>        position:absolute<span class="token punctuation">;</span>        top: 50%<span class="token punctuation">;</span>      left: 50%<span class="token punctuation">;</span>      transform: translate<span class="token punctuation">(</span>-50%, -50%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>  </code></pre><pre><code> 2、 使用flex,让其X,Y轴元素居中   ``` bash     div {   display: flex;   justify-content:center; //子元素水平居中   align-items:center; //子元素垂直居中 }   ```3、将子盒子转成行内块元素，给父元素添加text-align: center;     ``` bash   line-height: 700px，让子盒子水平居中   .box {   width: 500px;   height: 700px;   border: 1px solid #000;   text-align: center;   line-height: 700px;   /* 让图片水平居中 */        }  .content{  width: 200px;  height: 200px;  display: inline-block;//转成行内块元素     vertical-align: middle;//控制行内块的对齐方式中线对齐  background-color: pink;}</code></pre><p>​      </p><hr>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
